#!/usr/bin/env node
var debug = require('debug')('restapi');

var libs = process.cwd() + '/libs/';
var config = require(libs + 'config');
var log = require(libs + 'log')(module);
var app = require(libs + 'app');

var convert = require('../libs/utils/convert');//   convert from base64 to image

app.set('port', process.env.PORT || config.get('port') || 3000);

//  HTTPS
var https = require('https');
var fs = require('fs');
var options = {
    key: fs.readFileSync('/etc/letsencrypt/live/wxapp.kaytion.com/privkey.pem'),
    cert: fs.readFileSync('/etc/letsencrypt/live/wxapp.kaytion.com/fullchain.pem')
}

// var server = https.createServer(options, app);
var httpsServer =  https.createServer(options, app).listen(app.get('port'), function() {
  debug('Express server listening on port ' + app.get('port'));
  log.info('Express server listening on port ' + app.get('port'));
});

//  websocket SSL/TLS instance
var WebsocketServer = require('ws').Server;
var wss = new WebsocketServer({
  server: httpsServer
});

//  broadcast
wss.broadcast = function broadcast(data) {
    wss.clients.forEach(function each(client) {
        if (client.readyState === WebSocket.OPEN) {
            client.send(data);
        }
    });
};

wss.on('connection', function connection(ws) {
  ws.on('message', function incoming(message) {
    console.log('received: %s', message);
      if (message.length > 20) {
          convert.Decode(message, './gate.jpg');

      } else if (message == 'opendoor'){
          wss.broadcast('1');

      } else {
          ws.send('door is stand by');
          
      }

  });

  ws.send('wss was success');
});

