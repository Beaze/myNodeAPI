#!/usr/bin/env node
var debug = require('debug')('restapi');
var moment = require('moment');

var libs = process.cwd() + '/libs/';
var config = require(libs + 'config');
var log = require(libs + 'log')(module);
var app = require(libs + 'app');
var path = require('path');

var convert = require('../libs/utils/convert');//   convert from base64 to image
var clientList = [];

app.set('port', process.env.PORT || config.get('port') || 3000);

//  HTTPS
var https = require('https');
var fs = require('fs');
var options = {
    key: fs.readFileSync('/etc/letsencrypt/live/wxapp.kaytion.com/privkey.pem'),
    cert: fs.readFileSync('/etc/letsencrypt/live/wxapp.kaytion.com/fullchain.pem')
}

// var server = https.createServer(options, app);
var httpsServer =  https.createServer(options, app).listen(app.get('port'), function() {
    debug('Express server listening on port ' + app.get('port'));
    log.info('Express server listening on port ' + app.get('port'));
});

//  websocket SSL/TLS instance
var WebsocketServer = require('ws').Server;
var wss = new WebsocketServer({
    server: httpsServer
});

//  broadcast
function broadcastSend(data) {
    wss.clients.forEach(function each(client) {
        if (client.readyState === 1) {
            client.send(data);
            console.log('broadcast: %s', data);
        }
    });
};

//  json judge
var isJson = function(obj){
    var isjson = typeof(obj) == "object" && Object.prototype.toString.call(obj).toLowerCase() == "[object object]" && !obj.length;
    return isjson;
}

//  心跳
var pingRes = {
    method : "pong"
}

//  开门
var openDoor = {
    method : "cmd_relay",
    unionId : "532323",
    time: moment().format("YYYYMMDDHHmmss"),
    target: "1",
    param: {
        status: "on",
        index: "1",
        dealy: "5"
    }
}

//  查询
var personFind = {
    method : "person_find_by_unionId",
    unionId : "53234323",
    time : moment().format("YYYYMMDDHHmmss"),
    param: {
        unionId : "63234323"
    }
}

//  新增
var personSave = {
    method : "person_save",
    unionId : "532323",
    time : moment().format("YYYYMMDDHHmmss"),
    param: {
        name : "Yuan",
        idNo : "522132199909090999",
        title : "dev",
        mobile : "13888888888",
        comapny : "kaytion",
        face : "1",
        imgType : "jpg",
        validBegin : moment().format("YYYYMMDDHHmmss"),
        validEnd : moment().add(3, 'hours').format("YYYYMMDDHHmmss")
    }
}

//  绑定
var personBind = {
    method : "person_blind",
    unionId : "532323",
    time : moment().format("YYYYMMDDHHmmss"),
    param: {
        tdc : " "
    }
}

wss.on('connection', function connection(ws) {
    clientList.push(ws);
    console.log('++++++++++当+++++前+++++有+++++[%s]+++++个+++++连+++++接+++++++++++', clientList.length)
    ws.on('message', function incoming(message) {
        console.log('received: %s,\n ----message----', message);

        if (1000 < message.length) {
            convert.Decode(message, 'public/gate.jpg');
        } else {
            if (message.charAt(0) == '{') {
                var jmsg = JSON.parse(message);
                switch (jmsg.method) {
                    case 'hello': {
                        ws.send(JSON.stringify(pingRes));
                        break;
                    }
                    case 'ping': {
                        ws.send(JSON.stringify(pingRes));
                        break;
                    }

                    /** 请求已授权人员 **/
                    case 'person_find': {
                        broadcastSend(JSON.stringify(personFind));
                        console.log('*****查询人员****');
                        break;
                    }

                    /** 开门命令 **/
                    case 'gate_command': {
                        broadcastSend(JSON.stringify(openDoor));
                        break;
                    }

                    /** 上传图片 **/
                    case 'put_image' : {
                        if (message.length > 20) {
                            convert.Decode(message, 'public/gate.jpg');
                        }
                        break;
                    }

                    default:
                        break;
                }
            } else {
                ws.send('unknown message');
                console.log('unknow message');
            }
        }

    });

    ws.on('close', function () {
        clientList.pop(ws);
        console.log('-----------当-------前-----有-----[%s]-----个-----连-----接-----------', clientList.length);
    })

    ws.on('error', function (err) {
        console.log('Socket error happend');
        // ws.send(
        //     JSON.stringify({
        //         SocketError : err
        //     })
        // )
    })

});

